from time import sleep
from datetime import datetime
from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from utils.database.requests_old import set_user, user_exists, get_user_info, update_msg_id, get_banlist
from utils.database.requests.roles_req import get_role_by_password
from utils.FSM import Reg
from utils.config import PASSWORD_EMP, PASSWORD_ADMIN, ADM_MENU_TEXT, EMP_MENU_TEXT, BOSS_MENU_TEXT, PASSWORD_BOSS
from utils.kb.inline_kb import acceptation_reg, emp_menu_kb, adm_menu_kb, boss_menu_kb, all_roles_kb
from utils.fucntions import update_data, menu_text




router = Router()


# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è
@router.message(Command('start'))
async def hello(message: Message, bot: Bot, state: FSMContext):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –µ—Å—Ç—å —é–∑–µ—Ä —Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
    if (not (await user_exists(message.from_user.id))) and (message.from_user.id not in (await get_banlist())):
        await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!")
        msg = await message.answer("üîê –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥-–ø–∞—Ä–æ–ª—å.\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
        await state.update_data(msg_id=msg.message_id)  # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã
        await message.delete()  # —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è /start
        await state.set_state(Reg.password)
    # –µ—Å–ª–∏ —é–∑–µ—Ä —É–∂–µ –∑–∞—Ä–µ–≥–∞–Ω
    elif message.from_user.id not in (await get_banlist()):
        # –ø–µ—Ä–µ–ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ statedata –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ
        await update_data(message.from_user.id, state)

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —é–∑–µ—Ä—É —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–µ –µ–º—É –º–µ–Ω—é
        user_data = await get_user_info(message.from_user.id)
        data = await state.get_data()

            # –º–µ–Ω—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        if user_data.category == 'emp':
            msg = await message.answer(EMP_MENU_TEXT, reply_markup=emp_menu_kb)
            try:
                await bot.delete_message(chat_id=data["chat_id"], message_id=data["msg_id"])
            except:
                pass
            await message.delete()
            await state.update_data(msg_id=msg.message_id)
            await update_msg_id(message.from_user.id, msg.message_id)

            # –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
        elif user_data.category == 'adm':
            msg = await message.answer(ADM_MENU_TEXT, reply_markup=adm_menu_kb)
            try:
                await bot.delete_message(chat_id=data["chat_id"], message_id=data["msg_id"])
            except:
                pass
            await message.delete()
            await state.update_data(msg_id=msg.message_id)
            await update_msg_id(message.from_user.id, msg.message_id)

            # –º–µ–Ω—é –≤–ª–∞–¥–µ–ª—å—Ü–∞
        else:
            msg = await message.answer(BOSS_MENU_TEXT, reply_markup=boss_menu_kb)
            try:
                await bot.delete_message(chat_id=data["chat_id"], message_id=data["msg_id"])
            except:
                pass
            await message.delete()
            await state.update_data(msg_id=msg.message_id)
            await update_msg_id(message.from_user.id, msg.message_id)

        await state.set_state(None)
    else:
        await message.delete()
        await state.set_state(None)


# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –∏–ª–∏ —Å—Ç–∞—Ä—Ç –µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∑–∞—Ä–µ–≥–∞–Ω
@router.message(Reg.password)
async def pass_check(message: Message, bot: Bot, state: FSMContext):

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    if message.text == PASSWORD_EMP:
        data = await state.get_data()  # –Ω–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ —Ç—É—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ msg_id, –∏ –¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–¥–µ–ª–∞–Ω–æ —á—Ç–æ–±—ã
        # –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –º–µ–Ω—è–ª–æ—Å—å/—É–¥–∞–ª—è–ª–æ—Å—å –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.delete()
        await bot.edit_message_text(text="üîì –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!\n–í–≤–µ–¥–∏—Ç–µ <b>–∏–º—è:</b>",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(tg_username=message.from_user.username)
        await state.update_data(role="")
        await state.update_data(category="emp")
        await state.set_state(Reg.name)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    elif message.text == PASSWORD_ADMIN:
        data = await state.get_data()
        await message.delete()
        await bot.edit_message_text(text="üîì –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ <b>–£–ü–†–ê–í–õ–Ø–Æ–©–ò–ô</b>!\n–í–≤–µ–¥–∏—Ç–µ <b>–∏–º—è:</b>",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(tg_username=message.from_user.username)
        await state.update_data(role="")
        await state.update_data(category="adm")
        await state.set_state(Reg.name)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
    elif message.text == PASSWORD_BOSS:
        data = await state.get_data()
        await message.delete()
        await bot.edit_message_text(text="üîì –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ <b>–í–õ–ê–î–ï–õ–ï–¶</b>!\n–í–≤–µ–¥–∏—Ç–µ <b>–∏–º—è:</b>",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"])
        await state.update_data(tg_id=message.from_user.id)
        await state.update_data(tg_username=message.from_user.username)
        await state.update_data(role="boss")
        await state.update_data(category="boss")
        await state.set_state(Reg.name)

    # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    else:
        await message.delete()
        data = await state.get_data()
        try:
            await bot.edit_message_text(text="üîí <b>–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å</b>\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                                        chat_id=message.chat.id,
                                        message_id=data["msg_id"])
        except:
            pass


# —Ñ–∞–º–∏–ª–∏—è
@router.message(Reg.name)
async def get_name(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(name=message.text)
    data = await state.get_data()
    await message.delete()
    await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–í–≤–µ–¥–∏—Ç–µ <b>—Ñ–∞–º–∏–ª–∏—é:</b>",
                                chat_id=message.chat.id,
                                message_id=data["msg_id"])
    await state.set_state(Reg.surname)


# –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
@router.message(Reg.surname)
async def get_surname(message: Message, bot: Bot ,state: FSMContext):
    await state.update_data(surname=message.text)
    data = await state.get_data()
    await message.delete()
    await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                     f"\n–í–≤–µ–¥–∏—Ç–µ <b>–¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è:</b>",
                                chat_id=message.chat.id,
                                message_id=data["msg_id"])
    await state.set_state(Reg.birthday)


# –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.message(Reg.birthday)
async def get_birthday(message: Message, bot: Bot ,state: FSMContext):
    await state.update_data(birthday=message.text)
    data = await state.get_data()
    await message.delete()
    await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                     f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                     f"\n–í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>",
                                chat_id=message.chat.id,
                                message_id=data["msg_id"])
    await state.set_state(Reg.phoneNum)


# —Ä–æ–ª—å
@router.message(Reg.phoneNum)
async def get_phone(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–æ –µ–º—É –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å
    if data["category"] in ['emp', 'adm']:
        await message.delete()
        await state.update_data(phone=message.text)
        data = await state.get_data()
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                         f"\n–ò–º—è - {data["name"]}"
                                         f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                         f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                         f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                         f"\n–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–≤–æ—é —Ä–æ–ª—å</b>",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"],
                                    reply_markup=await all_roles_kb())  # –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–± —Å —Ä–æ–ª—è–º–∏

        await state.set_state(Reg.role)

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å boss, —Ç–æ –µ–º—É –Ω–µ –Ω—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å–≤–æ—é —Ä–æ–ª—å, —Å–º–æ—Ç—Ä–∏—Ç–µ pass_check line ~89, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º
    # –∫ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    else:
        # –µ—Å–ª–∏ boss –≤–≤–µ–ª —É–∂–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤–≤–æ–¥–µ –æ–Ω –Ω–µ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è
        if "phone" not in data:
            await message.delete()
            await state.update_data(phone=message.text)
            data = await state.get_data()
            await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                             f"\n–ò–º—è - {data["name"]}"
                                             f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                             f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                             f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                             f"\n\n<b>–í—Å–µ –≤–µ—Ä–Ω–æ?</b>",
                                        chat_id=message.chat.id,
                                        message_id=data["msg_id"],
                                        reply_markup=acceptation_reg)
            await state.set_state(Reg.acceptation)  # —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Å–∫–∞–∫–∏–≤–∞–µ–º –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        else:
            await message.delete()


# —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.callback_query(Reg.role)
async def get_role(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    await call.answer()
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if data["category"] == 'emp':
        await state.update_data(role=(await get_role_by_password(call.data)))
        data = await state.get_data()
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                         f"\n–ò–º—è - {data["name"]}"
                                         f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                         f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                         f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                         f"\n–†–æ–ª—å - {data["role"]}"
                                         f"\n\n<b>–í—Å–µ –≤–µ—Ä–Ω–æ?</b>",
                                    chat_id=call.from_user.id,
                                    message_id=data["msg_id"],
                                    reply_markup=acceptation_reg)  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await state.set_state(Reg.acceptation)

        # –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å —Ä–æ–ª–∏
    else:
        await state.update_data(role=(await get_role_by_password(call.data)))
        await state.update_data(role_password=call.data)  # –ø–∞—Ä–æ–ª—å –≤ data —á–µ—Ä–µ–∑ callback
        data = await state.get_data()
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                     f"\n–ò–º—è - {data["name"]}"
                                     f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                     f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                     f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                     f"\n–†–æ–ª—å - {data["role"]}"
                                     f"\n\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–æ–ª–∏:",
                                    chat_id=call.from_user.id,
                                    message_id=data["msg_id"],
                                    reply_markup=None)  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await state.set_state(Reg.role_check_pass)


@router.message(Reg.role_check_pass)
async def role_check_pass(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()

    # –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, —Ç–æ –∏–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    if str(message.text) == data["role_password"]:
        await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                         f"\n–ò–º—è - {data["name"]}"
                                         f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                         f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                         f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                         f"\n–†–æ–ª—å - {data["role"]}"
                                         f"\n\n<b>–£—Å–ø–µ—à–Ω–æ!</b>"
                                         f"\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã?",
                                    chat_id=message.chat.id,
                                    message_id=data["msg_id"],
                                    reply_markup=acceptation_reg)
        await state.set_state(Reg.acceptation)
        await message.delete()

    # –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π –µ–≥–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑
    else:
        try:
            await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                         f"\n–ò–º—è - {data["name"]}"
                                         f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                         f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                         f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                         f"\n–†–æ–ª—å - {data["role"]}"
                                         f"\n\nüôÖ‚Äç‚ôÇÔ∏è–ù–µ–≤–µ—Ä–Ω–æüôÖ‚Äç‚ôÄÔ∏è"
                                         f"\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–æ–ª–∏ –µ—â–µ —Ä–∞–∑:",
                                        chat_id=message.chat.id,
                                        message_id=data["msg_id"],
                                        reply_markup=None)  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        except:
            await bot.edit_message_text(text=f"<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</b>"
                                             f"\n–ò–º—è - {data["name"]}"
                                             f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                             f"\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {data["birthday"]}"
                                             f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                             f"\n–†–æ–ª—å - {data["role"]}"
                                             f"\n\n‚ùå–ù–µ–≤–µ—Ä–Ω–æ‚ùå"
                                             f"\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–æ–ª–∏ –µ—â–µ —Ä–∞–∑:",
                                        chat_id=message.chat.id,
                                        message_id=data["msg_id"],
                                        reply_markup=None)
        await message.delete()


# –∫–Ω–æ–ø–∫–∞ "–î–∞" –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥
@router.callback_query(F.data == "yes_r", Reg.acceptation)
async def reg_db(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    info = [call.from_user.id,
            f"tg://user?id={call.from_user.id}",
            call.from_user.username,
            data["role"],
            data["category"],
            data["name"],
            data["surname"],
            data["birthday"],
            data["phone"],
            str(datetime.now())[:19],
            (data["msg_id"]),
            call.message.chat.id]
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, —Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ
    try:
        await set_user(info)  # —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–¥ –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
        # –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—é
        await bot.send_message(text=f"–ù–û–í–´–ô –Æ–ó–ï–†"
                                    f"\n–ò–º—è - {data["name"]}"
                                    f"\n–§–∞–º–∏–ª–∏—è - {data["surname"]}"
                                    f"\n–°—Å—ã–ª–∫–∞ - tg://user?id={call.from_user.id}"
                                    f"\n–¢–µ–ª–µ—Ñ–æ–Ω - {data["phone"]}"
                                    f"\n–†–æ–ª—å - {data["role"]}"
                                    f"\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è - {data["category"]}",
                               chat_id=892980299
                               )
    except:
        category = (await state.get_data())["category"]
        await state.clear()
        if category == 'adm':
            await state.update_data(category=category)
            await state.update_data(role=category)
        else:
            await state.update_data(category=category)
        await call.message.edit_text(text="–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞...\n–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ\n<b>–í–≤–µ–¥–∏—Ç–µ –∏–º—è</b>")
        await state.set_state(Reg.name)
        return

    await call.message.delete()
    await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id-1) # —Ç—É—Ç –±–∞–≥
    msg = await bot.send_message(text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —Ç–µ–ø–µ—Ä—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", chat_id=call.message.chat.id,
                                 message_effect_id="5046509860389126442")
    await state.update_data(msg_id=msg.message_id)  # –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∫–∞ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á—Ç–æ–±—ã –∏–º –±—ã–ª–æ —É–¥–æ–±–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å
    await update_msg_id(call.from_user.id, msg.message_id)  # –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∫–∞ –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–¥ –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –æ–Ω —Ç–∞–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ
    await call.answer()
    # —Ñ—Ä–∏–∑ –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã, –∑–∞—Ç–µ–º –ø–æ—è–≤–ª—è–µ—Ç—Å—è –º–µ–Ω—é, –≤–∏–¥ –º–µ–Ω—é –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sleep(3)

    # –≤—ã–≤–æ–¥ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –º–µ–Ω—é —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω—Ü–∏—é
    await menu_text(data["category"], chat_id=call.from_user.id, message_id=msg.message_id, bot=bot, state=state)


# –∫–Ω–æ–ø–∫–∞ "–ù–µ—Ç"
@router.callback_query(F.data == 'no_r')  # –¥–æ–±–∞–≤–∏–ª –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å—Ç–µ–π—Ç
# —Ä–æ–ª—å –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ acceptation –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö –∫–æ–¥–∞ (admins/main —Ñ—É–Ω–∫—Ü–∏—è send_or_not
async def reg_repeat(call: CallbackQuery, bot: Bot, state: FSMContext):
    category = (await state.get_data())["category"]
    await state.clear()
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –∏–ª–∏ –Ω–µ—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–æ–ª–∏, –∏–Ω–∞—á–µ –±–µ–∑ —ç—Ç–æ–≥–æ –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É
    if category == 'adm':
        await state.update_data(category=category)
        await state.update_data(role=category)
    else:
        await state.update_data(category=category)
        await state.update_data(role='')
    await state.update_data(msg_id=call.message.message_id)
    await call.message.edit_text(text="–ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–Ω–æ–≤–æ...\n<b>–í–≤–µ–¥–∏—Ç–µ –∏–º—è</b>")
    await state.set_state(Reg.name)
    await call.answer()



