from time import sleep
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from utils.FSM import SendMsgToEmp, Menu
from utils.database.requests_old import get_user_info
from utils.fucntions import menu_text
from utils.kb.inline_kb import acceptation_msg, all_emp_kb, back_kb

router = Router()


# –∑–∞–ø—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
@router.callback_query(F.data == "send_msg")
async def asking_msg(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text('<b>–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>', reply_markup=back_kb)
    await state.set_state(SendMsgToEmp.msg_to_send)
    await call.answer()


# –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(SendMsgToEmp.msg_to_send)
async def confirm_send_msg(message: Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    await bot.edit_message_text(text=f"<b>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n\n<blockquote>{message.text}</blockquote>",
                                chat_id=data["chat_id"],
                                message_id=data["msg_id"],
                                reply_markup=acceptation_msg)
    await state.update_data(msg_to_send=message.text)
    await message.delete()


# —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ callback yes_m, –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.callback_query(F.data == 'yes_m')
async def sending_msg(call: CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    user = await get_user_info(data["choose_user_id"])

    # —É–∫–∞–∑—ã–≤–∞–µ—Ç –∫–µ–º –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if data["category"] == "adm":
        sender = "—É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ"
    else:
        sender = data['name']

    await bot.edit_message_text(text=f"üì© –ù–æ–≤–æ–µ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {sender}:"
                                f"\n<blockquote>{data["msg_to_send"]}</blockquote>",
                                chat_id=user.chat_id,
                                message_id=user.msg_id,
                                reply_markup=back_kb)
    await call.message.edit_text("<b>–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</b>")
    sleep(2)
    await menu_text(data["category"], chat_id=call.from_user.id, message_id=call.message.message_id, bot=bot, state=state)
    await call.answer()


# —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ callback no_m, –æ—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.callback_query(F.data == 'no_m')
async def cancel_sending_msg(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    await call.message.edit_text("<b>–û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.</b>")
    sleep(0.5)
    await call.message.edit_text("<b>–û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏..</b>")
    sleep(0.5)
    await call.message.edit_text("<b>–û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏...</b>")
    sleep(0.5)
    await menu_text(data["category"], chat_id=call.from_user.id, message_id=call.message.message_id, bot=bot,
                    state=state)
    await state.set_state(None)
    await call.answer()



