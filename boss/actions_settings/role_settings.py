from time import sleep
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from utils.database.requests.roles_req import get_role_by_password, del_role, change_role_password, add_role
from utils.fucntions import menu_text
from utils.kb.inline_kb import back_kb, all_roles_and_add_kb, role_settings_menu, confirm_del_role, confirm_add_role
from utils.FSM import Roles

router = Router()


# –ø–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π
@router.callback_query(F.data == "change_role")
async def show_role_settings_menu(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text(text="<b>–ò–º–µ—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ä–æ–ª–∏</b>"
                                      "\n\nüí°–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ä–æ–ª—å",
                                 reply_markup=await all_roles_and_add_kb())
    await state.set_state(Roles.Choose_role)
    await call.answer()


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ callback —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Ä–æ–ª–∏
@router.callback_query(Roles.Choose_role, F.data != 'back', F.data != 'add_role')
async def change_role_settings(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text(text=f"<b>–û –†–û–õ–ò</b>"
                                      f"\n\nüè∑–ù–∞–∑–≤–∞–Ω–∏–µ: {await get_role_by_password(call.data)}"
                                      f"\nüîë–ü–∞—Ä–æ–ª—å: {call.data}",
                                 reply_markup=role_settings_menu)
    await state.update_data(chosen_role=call.data)
    await state.set_state(None)
    await call.answer()


'''================================–£–î–ê–õ–ï–ù–ò–ï –†–û–õ–ò============================='''


# —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏
@router.callback_query(F.data == "del_role")
async def confirming_del_role(call: CallbackQuery):
    await call.message.edit_text("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ", reply_markup=confirm_del_role)
    await call.answer()


# —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è
@router.callback_query(F.data.startswith('r_'))
async def deleting_role(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()
    if call.data == 'r_yes':
        await del_role(data['chosen_role'])  # —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        await call.message.edit_text("<b>–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞!</b>")
        sleep(1)
        # –≤—ã–≤–æ–¥ –º–µ–Ω—é
        await menu_text(data["category"],
                        chat_id=call.from_user.id,
                        message_id=call.message.message_id,
                        bot=bot,
                        state=state)
    else:
        await call.message.edit_text("<b>–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è</b>")
        sleep(1)
        # –≤—ã–≤–æ–¥ –º–µ–Ω—é
        await menu_text(data["category"],
                        chat_id=call.from_user.id,
                        message_id=call.message.message_id,
                        bot=bot,
                        state=state)
        await call.answer()

'''================================–ö–û–ù–ï–¶ –£–î–ê–õ–ï–ù–ò–ï –†–û–õ–ò============================================================'''


'''============================–ò–ó–ú–ï–ù–ï–ù–ò–ï –ü–ê–†–û–õ–Ø========================='''


# –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
@router.callback_query(F.data == "change_role_password")
async def ask_new_role_password(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text(text='<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</b>',
                                 reply_markup=back_kb)
    await state.set_state(Roles.Change_password)
    await call.answer()


# –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
@router.message(Roles.Change_password)
async def changing_role_password(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    await message.delete()
    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤ –±–¥
    await change_role_password(data['chosen_role'], message.text)

    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.edit_message_text(text='<b>–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!</b>',
                                chat_id=message.chat.id,
                                message_id=data["msg_id"])

    sleep(1)
    # –≤—ã–≤–æ–¥ –º–µ–Ω—é
    await menu_text(data["category"],
                    chat_id=message.chat.id,
                    message_id=data['msg_id'],
                    bot=bot,
                    state=state)
'''================================–ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ü–ê–†–û–õ–Ø============================================================'''


'''===================================–î–û–ë–ê–í–õ–ï–ù–ò–ï –†–û–õ–ò============================='''


# —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–ª –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–Ω–µ—Ç" –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
@router.callback_query(F.data == "add_role")
async def new_role(call: CallbackQuery, state: FSMContext):
    await call.answer()
    # –Ω–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ä–æ–ª–∏
    await call.message.edit_text(text='<b>–î–ê–ù–ù–´–ï –†–û–õ–ò</b>'
                                      '\n\nüè∑–ù–∞–∑–≤–∞–Ω–∏–µ: ???'
                                      '\nüîë–ü–∞—Ä–æ–ª—å: ???'
                                      '\n\n<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:</b>',
                                 reply_markup=back_kb)
    await state.set_state(Roles.New_role_name)


# –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–π —Ä–æ–ª–∏
@router.message(Roles.New_role)
async def ask_new_roles_name(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()

    # –Ω–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ä–æ–ª–∏
    await bot.edit_message_text(text='<b>–î–ê–ù–ù–´–ï –†–û–õ–ò</b>'
                                     '\n\nüè∑–ù–∞–∑–≤–∞–Ω–∏–µ: ???'
                                     '\nüîë–ü–∞—Ä–æ–ª—å: ???'
                                     '\n\n<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:</b>',
                                chat_id=message.chat.id,
                                message_id=data['msg_id'],
                                reply_markup=back_kb)
    await state.set_state(Roles.New_role_name)


# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è
@router.message(Roles.New_role_name)
async def ask_new_roles_password(message: Message, bot: Bot, state: FSMContext):
    await message.delete()
    # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤ data
    await state.update_data(new_role_name=message.text)

    data = await state.get_data()
    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.edit_message_text(text='<b>–î–ê–ù–ù–´–ï –†–û–õ–ò</b>'
                                     f'\n\nüè∑–ù–∞–∑–≤–∞–Ω–∏–µ: {data["new_role_name"]}'
                                     f'\nüîë–ü–∞—Ä–æ–ª—å: ???'
                                     f'\n\n<b>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</b>',
                                chat_id=message.chat.id,
                                message_id=data["msg_id"])

    await state.set_state(Roles.New_role_password)


# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∏ –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
@router.message(Roles.New_role_password)
async def confirm(message: Message, bot: Bot, state: FSMContext):

    # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤ data
    await state.update_data(new_role_password=message.text)

    data = await state.get_data()
    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.edit_message_text(text='<b>–î–ê–ù–ù–´–ï –†–û–õ–ò</b>'
                                     f'\n\nüè∑–ù–∞–∑–≤–∞–Ω–∏–µ: {data["new_role_name"]}'
                                     f'\nüîë–ü–∞—Ä–æ–ª—å: {data['new_role_password']}'
                                     f'\n\n<b>–í—Å–µ –≤–µ—Ä–Ω–æ?</b>',
                                chat_id=message.chat.id,
                                message_id=data["msg_id"],
                                reply_markup=confirm_add_role)
    await message.delete()

    await state.set_state(Roles.New_role_confirm)


# –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–æ–ª–∏
@router.callback_query(F.data.startswith("add"))
async def adding_role_to_db(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = await state.get_data()

    # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if call.data == 'add_yes':
        await add_role(data['new_role_name'], data['new_role_password'])  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥
        await call.message.edit_text(text="<b>–†–æ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!</b>")
        sleep(1)
        await menu_text(data["category"],
                        chat_id=call.message.chat.id,
                        message_id=data['msg_id'],
                        bot=bot,
                        state=state)
    else:
        await call.message.edit_text(text='–ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–Ω–æ–≤–æ.')
        sleep(0.5)
        await call.message.edit_text(text='–ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–Ω–æ–≤–æ..')
        sleep(0.5)
        await call.message.edit_text(text='–ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–Ω–æ–≤–æ...')
        sleep(0.5)

        # –Ω–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ä–æ–ª–∏
        await bot.edit_message_text(text='<b>–î–ê–ù–ù–´–ï –†–û–õ–ò</b>'
                                         '\n\nüè∑–ù–∞–∑–≤–∞–Ω–∏–µ: ???'
                                         '\nüîë–ü–∞—Ä–æ–ª—å: ???'
                                         '\n\n<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:</b>',
                                    chat_id=call.message.chat.id,
                                    message_id=data['msg_id'],
                                    reply_markup=back_kb)
        await state.set_state(Roles.New_role_name)
        await call.answer()


'''================================–ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –†–û–õ–ò============================================================'''
